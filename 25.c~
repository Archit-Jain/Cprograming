#include<stdio.h>
#define max 10
int w[max],i,j,p[max];
int n,m,y[max],x[max],fp=-1,fw;
float unit[max];
void get()
{
printf("Enter total number of items");
scanf("%d",&n);
for(i=0;i<n;i++)
{
printf("Enter weight and profit of item %d\n",i+1);
scanf("%d%d",&w[i],&p[i]);
}
printf("\nEnter max capacity of sack");
scanf("%d",&m);
}
void show()
{
float s=0.0;
printf("\nItem\tWeight\tCost\tUnit profit\tSelected\n");
for(i=0;i<n;i++)
printf("%d\t%d\t%d\t%f\t%d\n",i+1,w[i],p[i],unit[i],x[i]);
printf("Sacks now hold following items");
for(i=0;i<n;i++)
if(x[i]==1)
{
printf("%d",i+1);
s+=(float)p[i]*x[i];
}
printf("\nMaximum profit is %f",s);
}
void sort()
{
int t,t1;
int t2;
for(i=0;i<n;i++)
unit[i]=((float)p[i]/w[i]);
for(i=0;i<n-1;i++)
for(j=i+1;j<n;j++)
if(unit[i]<unit[j])
{
t2=unit[i];
unit[i]=unit[j];
unit[j]=t2;
t=p[i];
p[i]=p[j];
p[j]=t;
t1=w[i];
w[i]=w[j];
w[j]=t1;
}
}
float bound(float cp,float cw,int k)
{
float b=cp;
float c=cw;
for(i=k;i<=n;i++)
{
c+=w[i];
if(c<m)
b=b+p[i];
else
return (b+(1-(c-m)/(float)w[i])*p[i]);
}
return b;
}
void knapsack(int k,float cp,float cw)
{
if(cw+w[k]<=m)
{
y[k]=1;
if(k<=n)
knapsack(k+1,cp+p[k],cw+w[k]);
if(cp+p[k]>fp&&k==n)
{
fw=cw+w[k];
for(j=0;j<=k;j++)
x[j]=y[j];
}
}
if(bound(cp,cw,k)>=fp)
{
y[k]=0;
if(k<=n)
knapsack(k+1,cp,cw);
if(cp>fp&&k==n)
{
fp=cp;
fw=cw;
for(j=0;j<=k;j++)
x[j]=y[j];
}
}
}
main()
{
	get();
	printf("The sack is arranged in ascending order");
	sort();
	knapsack(0,0.0,0.0);
	show();
}

